define("ndi/material/0.1.0/material",["ndi/render/0.58.0/render"],function(a,b,c){function d(a){return"object"!=typeof this||this instanceof d?(void 0!==a.id&&(this.id=a.id),this.material=null,this.attributes={},this.val(a),this.__init__(),void 0):new d(a)}var e=a("ndi/render/0.58.0/render");d.prototype.__init__=function(){var a=this.attributes,b="MeshBasicMaterial";(void 0!==a.ambient||void 0!==a.emissive||void 0!==a.wrapAround||void 0!==a.wrapRGB||void 0!==a.morphNormals)&&(b="MeshLambertMaterial"),(void 0!==a.specular||void 0!==a.shininess||void 0!==a.metal||void 0!==a.perPixel||void 0!==a.bumpMap||void 0!==a.skinning||void 0!==a.normalMap||void 0!==a.normalScale)&&(b="MeshPhongMaterial"),this.material=new e[b](a)},d.prototype.val=function(a){var b=this.attributes;if(void 0===a)return{side:b.side,opacity:b.opacity,transparent:b.transparent,blending:b.blending,blendSrc:b.blendSrc,blendEquation:b.blendEquation,depthTest:b.depthTest,depthWrite:b.depthWrite,polygonOffset:b.polygonOffset,polygonOffsetFactor:b.polygonOffsetFactor,polygonOffsetUnits:b.polygonOffsetUnits,alphaTest:b.alphaTest,overdraw:b.overdraw,visible:b.visible,needsUpdate:b.needsUpdate,color:b.color,map:b.map,lightMap:b.lightMap,specularMap:b.specularMap,envMap:b.envMap,combine:b.combine,reflectivity:b.reflectivity,refractionRatio:b.refractionRatio,fog:b.fog,shading:b.shading,wireframe:b.wireframe,wireframeLinewidth:b.wireframeLinewidth,wireframeLinecap:b.wireframeLinecap,wireframeLinejoin:b.wireframeLinejoin,vertexColors:b.vertexColors,skinning:b.skinning,morphTargets:b.morphTargets,ambient:b.ambient,emissive:b.emissive,wrapAround:b.wrapAround,wrapRGB:b.wrapRGB,morphNormals:b.morphNormals,specular:b.specular,shininess:b.shininess,metal:b.metal,perPixel:b.perPixel,bumpMap:b.bumpMap,bumpScale:b.bumpScale,normalMap:b.normalMap,normalScale:b.normalScale};b.side=a.side,b.opacity=a.opacity,b.transparent=a.transparent,b.blending=a.blending,b.blendSrc=a.blendSrc,b.blendEquation=a.blendEquation,b.depthTest=a.depthTest,b.depthWrite=a.depthWrite,b.polygonOffset=a.polygonOffset,b.polygonOffsetFactor=a.polygonOffsetFactor,b.polygonOffsetUnits=a.polygonOffsetUnits,b.alphaTest=a.alphaTest,b.overdraw=a.overdraw,b.visible=a.visible,b.needsUpdate=a.needsUpdate,b.color=a.color,b.map=a.map,b.lightMap=a.lightMap,b.specularMap=a.specularMap,b.envMap=a.envMap,b.combine=a.combine,b.reflectivity=a.reflectivity,b.refractionRatio=a.refractionRatio,b.fog=a.fog,b.shading=a.shading,b.wireframe=a.wireframe,b.wireframeLinewidth=a.wireframeLinewidth,b.wireframeLinecap=a.wireframeLinecap,b.wireframeLinejoin=a.wireframeLinejoin,b.vertexColors=a.vertexColors,b.skinning=a.skinning,b.morphTargets=a.morphTargets,b.ambient=a.ambient,b.emissive=a.emissive,b.wrapAround=a.wrapAround,b.wrapRGB=a.wrapRGB,b.morphNormals=a.morphNormals,b.specular=a.specular,b.shininess=a.shininess,b.metal=a.metal,b.perPixel=a.perPixel,b.bumpMap=a.bumpMap,b.bumpScale=a.bumpScale,b.normalMap=a.normalMap,b.normalScale=a.normalScale;for(m in b)void 0===b[m]&&delete b[m]},c.exports=d});
